"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/notes/page",{

/***/ "(app-pages-browser)/./src/utils/api.js":
/*!**************************!*\
  !*** ./src/utils/api.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   notes: function() { return /* binding */ notes; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001/api\";\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n// Using localStorage to persist mock data\nconst getMockNotes = ()=>{\n    if (true) {\n        const storedNotes = localStorage.getItem(\"notes\");\n        return storedNotes ? JSON.parse(storedNotes) : [];\n    }\n    return [];\n};\nconst saveMockNotes = (notes)=>{\n    if (true) {\n        localStorage.setItem(\"notes\", JSON.stringify(notes));\n    }\n};\nconst notes = {\n    getAll: async ()=>{\n        try {\n            const notes = getMockNotes();\n            return notes;\n        } catch (error) {\n            console.error(\"Error getting notes:\", error);\n            throw new Error(\"Failed to fetch notes\");\n        }\n    },\n    getOne: async (id)=>{\n        try {\n            const notes = getMockNotes();\n            const note = notes.find((note)=>note.id === id);\n            if (!note) throw new Error(\"Note not found\");\n            return note;\n        } catch (error) {\n            console.error(\"Error getting note:\", error);\n            throw error;\n        }\n    },\n    create: async (title, body)=>{\n        try {\n            const notes = getMockNotes();\n            const newNote = {\n                id: Math.random().toString(36).substr(2, 9),\n                title,\n                content: body,\n                createdAt: new Date().toISOString()\n            };\n            notes.push(newNote);\n            saveMockNotes(notes);\n            return newNote;\n        } catch (error) {\n            console.error(\"Error creating note:\", error);\n            throw new Error(\"Failed to create note\");\n        }\n    },\n    update: async (id, title, body)=>{\n        try {\n            const notes = getMockNotes();\n            const noteIndex = notes.findIndex((note)=>note.id === id);\n            if (noteIndex === -1) throw new Error(\"Note not found\");\n            const updatedNote = {\n                ...notes[noteIndex],\n                title,\n                content: body,\n                updatedAt: new Date().toISOString()\n            };\n            notes[noteIndex] = updatedNote;\n            saveMockNotes(notes);\n            return updatedNote;\n        } catch (error) {\n            console.error(\"Error updating note:\", error);\n            throw error;\n        }\n    },\n    delete: async (id)=>{\n        try {\n            const notes = getMockNotes();\n            const noteIndex = notes.findIndex((note)=>note.id === id);\n            if (noteIndex === -1) throw new Error(\"Note not found\");\n            notes.splice(noteIndex, 1);\n            saveMockNotes(notes);\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error deleting note:\", error);\n            throw error;\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O2dCQUFFOEIsU0FBUztZQUFLO1FBQ3pCLEVBQUUsT0FBTzFCLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHdCQUF3QkE7WUFDdEMsTUFBTUE7UUFDUjtJQUNGO0FBQ0YsRUFBRTtBQUVGLCtEQUFlZixHQUFHQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9hcGkuanM/ZTI4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5cclxuY29uc3QgQVBJX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMS9hcGknO1xyXG5cclxuY29uc3QgYXBpID0gYXhpb3MuY3JlYXRlKHtcclxuICBiYXNlVVJMOiBBUElfVVJMLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgfSxcclxufSk7XHJcblxyXG4vLyBVc2luZyBsb2NhbFN0b3JhZ2UgdG8gcGVyc2lzdCBtb2NrIGRhdGFcclxuY29uc3QgZ2V0TW9ja05vdGVzID0gKCkgPT4ge1xyXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgY29uc3Qgc3RvcmVkTm90ZXMgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbm90ZXMnKTtcclxuICAgIHJldHVybiBzdG9yZWROb3RlcyA/IEpTT04ucGFyc2Uoc3RvcmVkTm90ZXMpIDogW107XHJcbiAgfVxyXG4gIHJldHVybiBbXTtcclxufTtcclxuXHJcbmNvbnN0IHNhdmVNb2NrTm90ZXMgPSAobm90ZXMpID0+IHtcclxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdub3RlcycsIEpTT04uc3RyaW5naWZ5KG5vdGVzKSk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IG5vdGVzID0ge1xyXG4gIGdldEFsbDogYXN5bmMgKCkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3Qgbm90ZXMgPSBnZXRNb2NrTm90ZXMoKTtcclxuICAgICAgcmV0dXJuIG5vdGVzO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2V0dGluZyBub3RlczonLCBlcnJvcik7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIG5vdGVzJyk7XHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgZ2V0T25lOiBhc3luYyAoaWQpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IG5vdGVzID0gZ2V0TW9ja05vdGVzKCk7XHJcbiAgICAgIGNvbnN0IG5vdGUgPSBub3Rlcy5maW5kKG5vdGUgPT4gbm90ZS5pZCA9PT0gaWQpO1xyXG4gICAgICBpZiAoIW5vdGUpIHRocm93IG5ldyBFcnJvcignTm90ZSBub3QgZm91bmQnKTtcclxuICAgICAgcmV0dXJuIG5vdGU7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZXR0aW5nIG5vdGU6JywgZXJyb3IpO1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBjcmVhdGU6IGFzeW5jICh0aXRsZSwgYm9keSkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3Qgbm90ZXMgPSBnZXRNb2NrTm90ZXMoKTtcclxuICAgICAgY29uc3QgbmV3Tm90ZSA9IHtcclxuICAgICAgICBpZDogTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpLFxyXG4gICAgICAgIHRpdGxlLFxyXG4gICAgICAgIGNvbnRlbnQ6IGJvZHksIC8vIFN0b3JlIGJvZHkgYXMgY29udGVudFxyXG4gICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICB9O1xyXG4gICAgICBub3Rlcy5wdXNoKG5ld05vdGUpO1xyXG4gICAgICBzYXZlTW9ja05vdGVzKG5vdGVzKTtcclxuICAgICAgcmV0dXJuIG5ld05vdGU7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjcmVhdGluZyBub3RlOicsIGVycm9yKTtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIG5vdGUnKTtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICB1cGRhdGU6IGFzeW5jIChpZCwgdGl0bGUsIGJvZHkpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IG5vdGVzID0gZ2V0TW9ja05vdGVzKCk7XHJcbiAgICAgIGNvbnN0IG5vdGVJbmRleCA9IG5vdGVzLmZpbmRJbmRleChub3RlID0+IG5vdGUuaWQgPT09IGlkKTtcclxuICAgICAgaWYgKG5vdGVJbmRleCA9PT0gLTEpIHRocm93IG5ldyBFcnJvcignTm90ZSBub3QgZm91bmQnKTtcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHVwZGF0ZWROb3RlID0ge1xyXG4gICAgICAgIC4uLm5vdGVzW25vdGVJbmRleF0sXHJcbiAgICAgICAgdGl0bGUsXHJcbiAgICAgICAgY29udGVudDogYm9keSwgLy8gU3RvcmUgYm9keSBhcyBjb250ZW50XHJcbiAgICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgIH07XHJcbiAgICAgIG5vdGVzW25vdGVJbmRleF0gPSB1cGRhdGVkTm90ZTtcclxuICAgICAgc2F2ZU1vY2tOb3Rlcyhub3Rlcyk7XHJcbiAgICAgIHJldHVybiB1cGRhdGVkTm90ZTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHVwZGF0aW5nIG5vdGU6JywgZXJyb3IpO1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBkZWxldGU6IGFzeW5jIChpZCkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3Qgbm90ZXMgPSBnZXRNb2NrTm90ZXMoKTtcclxuICAgICAgY29uc3Qgbm90ZUluZGV4ID0gbm90ZXMuZmluZEluZGV4KG5vdGUgPT4gbm90ZS5pZCA9PT0gaWQpO1xyXG4gICAgICBpZiAobm90ZUluZGV4ID09PSAtMSkgdGhyb3cgbmV3IEVycm9yKCdOb3RlIG5vdCBmb3VuZCcpO1xyXG4gICAgICBub3Rlcy5zcGxpY2Uobm90ZUluZGV4LCAxKTtcclxuICAgICAgc2F2ZU1vY2tOb3Rlcyhub3Rlcyk7XHJcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGRlbGV0aW5nIG5vdGU6JywgZXJyb3IpO1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBpOyJdLCJuYW1lcyI6WyJheGlvcyIsIkFQSV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsImFwaSIsImNyZWF0ZSIsImJhc2VVUkwiLCJoZWFkZXJzIiwiZ2V0TW9ja05vdGVzIiwic3RvcmVkTm90ZXMiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiSlNPTiIsInBhcnNlIiwic2F2ZU1vY2tOb3RlcyIsIm5vdGVzIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsImdldEFsbCIsImVycm9yIiwiY29uc29sZSIsIkVycm9yIiwiZ2V0T25lIiwiaWQiLCJub3RlIiwiZmluZCIsInRpdGxlIiwiYm9keSIsIm5ld05vdGUiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHIiLCJjb250ZW50IiwiY3JlYXRlZEF0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwicHVzaCIsInVwZGF0ZSIsIm5vdGVJbmRleCIsImZpbmRJbmRleCIsInVwZGF0ZWROb3RlIiwidXBkYXRlZEF0IiwiZGVsZXRlIiwic3BsaWNlIiwic3VjY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/api.js\n"));

/***/ })

});